// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package admingrpc

import (
	"github.com/blockysource/authz/cache"
	"github.com/blockysource/authz/deps"
	"github.com/blockysource/authz/ports/handlers/admin/v1alpha"
)

// Injectors from wire.go:

// NewServices creates a new instance of the admin gRPC services.
func NewServices(d *deps.Dependencies, c *cache.Containers) (*Services, func(), error) {
	keysServiceHandler, cleanup, err := adminv1alpha.NewKeysServiceHandler(d, c)
	if err != nil {
		return nil, nil, err
	}
	admingrpcKeysServices := keysServices{
		v1Alpha: keysServiceHandler,
	}
	clientsServiceHandler, cleanup2, err := adminv1alpha.NewClientsServiceHandler(d, c)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	admingrpcClientsServices := clientsServices{
		v1Alpha: clientsServiceHandler,
	}
	services := &Services{
		keys:    admingrpcKeysServices,
		clients: admingrpcClientsServices,
	}
	return services, func() {
		cleanup2()
		cleanup()
	}, nil
}
